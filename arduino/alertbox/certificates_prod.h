#ifndef _CERTIFICATES_H_
#define _CERTIFICATES_H_

#ifdef __cplusplus
extern "C"
{
#endif

/* This file is auto-generated by the pycert_bearssl tool.  Do not change it manually.
 * Certificates are BearSSL br_x509_trust_anchor format.  Included certs:
 *
 * Index:    0
 * Label:    takeshiba.ca
 * Subject:  CN=takeshiba.ca,OU=takeshiba.ca,O=takeshiba.ca,C=CA
 * Type:     Certificate Authority
 */

#define TAs_NUM 1

static const unsigned char TA_DN0[] = {
    0x30, 0x52, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x43, 0x41, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a,
    0x13, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x68, 0x69, 0x62, 0x61, 0x2e,
    0x63, 0x61, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13,
    0x0c, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x68, 0x69, 0x62, 0x61, 0x2e, 0x63,
    0x61, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x0c,
    0x74, 0x61, 0x6b, 0x65, 0x73, 0x68, 0x69, 0x62, 0x61, 0x2e, 0x63, 0x61,
};

static const unsigned char TA_RSA_N0[] = {
    0xa8, 0x63, 0xaa, 0x11, 0xc6, 0x22, 0x0c, 0x64, 0xd9, 0xb5, 0x8e, 0x14,
    0x49, 0xef, 0x5a, 0x28, 0x3c, 0x8f, 0xb4, 0x83, 0xad, 0x85, 0xc8, 0xd6,
    0x89, 0x3b, 0x36, 0xf8, 0xe0, 0xad, 0x83, 0xaa, 0x08, 0xf8, 0xe6, 0x5f,
    0x3b, 0xd9, 0x6a, 0x38, 0x3b, 0x99, 0xb3, 0xb5, 0xb4, 0xab, 0x4e, 0x1a,
    0x9a, 0xb1, 0xee, 0xe0, 0xb6, 0x91, 0xef, 0x2f, 0x30, 0x6a, 0xe7, 0x90,
    0xe1, 0x88, 0x2d, 0xc3, 0xec, 0x51, 0x0a, 0x75, 0xa1, 0xfb, 0x6c, 0x2f,
    0xc7, 0x73, 0xd7, 0x75, 0xa5, 0x86, 0xbf, 0xcd, 0xf5, 0x5d, 0x5a, 0xdb,
    0x5c, 0x33, 0x1b, 0x7d, 0xd9, 0x12, 0xe6, 0xbe, 0x13, 0xe8, 0xf9, 0x37,
    0xa6, 0xe6, 0x0f, 0x2e, 0xe3, 0xff, 0x26, 0x1a, 0xb2, 0x71, 0x36, 0x88,
    0x4b, 0x35, 0xf0, 0x2b, 0x95, 0xb9, 0xae, 0x8b, 0xd2, 0x18, 0xeb, 0x09,
    0x8e, 0xa5, 0xba, 0xfc, 0xfe, 0x0b, 0xf9, 0xee, 0xea, 0x45, 0xbc, 0xa8,
    0xd9, 0xd4, 0x5b, 0x72, 0xdd, 0x20, 0x5b, 0x2a, 0x2b, 0xb7, 0x13, 0xda,
    0x11, 0x79, 0x50, 0x6e, 0x38, 0x8a, 0x5b, 0x5e, 0x5d, 0x79, 0xb1, 0xa4,
    0xaa, 0x68, 0xf7, 0x22, 0x0c, 0x3a, 0x30, 0x4b, 0xb6, 0xe0, 0x90, 0x6c,
    0x50, 0xbd, 0x84, 0xe9, 0xa6, 0x90, 0x8d, 0xf3, 0x15, 0x0b, 0xda, 0x74,
    0x60, 0xe6, 0xe7, 0xbd, 0x4d, 0x17, 0xa2, 0x85, 0xd1, 0xa4, 0xeb, 0xb5,
    0xd0, 0xbe, 0x9d, 0xe3, 0x63, 0xed, 0x44, 0x27, 0x59, 0x59, 0x2e, 0xf9,
    0xc5, 0x9a, 0x6d, 0x3b, 0xcd, 0xe1, 0x19, 0x84, 0xe1, 0x13, 0x8e, 0x01,
    0xc8, 0x93, 0x6c, 0x14, 0xcc, 0x5c, 0xaf, 0xef, 0x4a, 0x78, 0x84, 0xf0,
    0xb6, 0x8a, 0xbf, 0x21, 0xf0, 0x31, 0x35, 0x30, 0x8a, 0x4b, 0x8e, 0xe4,
    0x4b, 0xfa, 0x0e, 0x8f, 0xd1, 0xe8, 0x5c, 0x14, 0xd3, 0x60, 0xca, 0x0c,
    0x24, 0xbb, 0x8d, 0xa5,
};

static const unsigned char TA_RSA_E0[] = {
    0x01, 0x00, 0x01,
};

static const br_x509_trust_anchor TAs[] = {
    {
        { (unsigned char *)TA_DN0, sizeof TA_DN0 },
        BR_X509_TA_CA,
        {
            BR_KEYTYPE_RSA,
            { .rsa = {
                (unsigned char *)TA_RSA_N0, sizeof TA_RSA_N0,
                (unsigned char *)TA_RSA_E0, sizeof TA_RSA_E0,
            } }
        }
    },
};

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ifndef _CERTIFICATES_H_ */
