#ifndef _CERTIFICATES_H_
#define _CERTIFICATES_H_

#ifdef __cplusplus
extern "C"
{
#endif

/* This file is auto-generated by the pycert_bearssl tool.  Do not change it manually.
 * Certificates are BearSSL br_x509_trust_anchor format.  Included certs:
 *
 * Index:    0
 * Label:    takeshiba-ca
 * Subject:  1.2.840.113549.1.9.1=laurent.foucher@interieur.gouv.fr,ST=FRANCE,OU=C3,O=MININT-SDI-BUA,L=PARIS,CN=takeshiba-ca,C=FR
 * Type:     Certificate Authority
 */

#define TAs_NUM 1

static const unsigned char TA_DN0[] = {
    0x30, 0x81, 0x9d, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,
    0x13, 0x02, 0x46, 0x52, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x68, 0x69, 0x62, 0x61,
    0x2d, 0x63, 0x61, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x07,
    0x0c, 0x05, 0x50, 0x41, 0x52, 0x49, 0x53, 0x31, 0x17, 0x30, 0x15, 0x06,
    0x03, 0x55, 0x04, 0x0a, 0x0c, 0x0e, 0x4d, 0x49, 0x4e, 0x49, 0x4e, 0x54,
    0x2d, 0x53, 0x44, 0x49, 0x2d, 0x42, 0x55, 0x41, 0x31, 0x0b, 0x30, 0x09,
    0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x02, 0x43, 0x33, 0x31, 0x0f, 0x30,
    0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x06, 0x46, 0x52, 0x41, 0x4e,
    0x43, 0x45, 0x31, 0x30, 0x30, 0x2e, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
    0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x21, 0x6c, 0x61, 0x75, 0x72, 0x65,
    0x6e, 0x74, 0x2e, 0x66, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x40, 0x69,
    0x6e, 0x74, 0x65, 0x72, 0x69, 0x65, 0x75, 0x72, 0x2e, 0x67, 0x6f, 0x75,
    0x76, 0x2e, 0x66, 0x72,
};

static const unsigned char TA_RSA_N0[] = {
    0xbc, 0xa0, 0x4c, 0xc0, 0x49, 0x4b, 0xa9, 0x30, 0x9c, 0x7c, 0xcd, 0xea,
    0x0b, 0x22, 0x1e, 0xd6, 0xa4, 0xbb, 0xdd, 0x9a, 0xf2, 0xa8, 0x0f, 0xa3,
    0xbb, 0xd8, 0x89, 0xbf, 0x62, 0x15, 0x0c, 0xe5, 0x35, 0x19, 0xde, 0xde,
    0x8b, 0xe1, 0x9b, 0x8c, 0xb5, 0xf6, 0x8c, 0xee, 0x6f, 0xe2, 0xb2, 0xdb,
    0xf8, 0x24, 0xa4, 0x89, 0xf9, 0x06, 0xba, 0x9b, 0x58, 0x93, 0xe0, 0x07,
    0xad, 0xcd, 0x1a, 0x3f, 0x70, 0x7f, 0x5b, 0x15, 0xe2, 0x5f, 0xf3, 0xb0,
    0x29, 0x11, 0x09, 0x16, 0x95, 0xc4, 0x81, 0xa3, 0x95, 0xde, 0xd2, 0x13,
    0xbb, 0x81, 0xb7, 0x85, 0xae, 0xd5, 0xb0, 0x49, 0xd1, 0x76, 0xf3, 0xbe,
    0xe9, 0xa2, 0xcc, 0x0d, 0x2c, 0x80, 0x84, 0xbd, 0xc2, 0xb4, 0x13, 0x1c,
    0x24, 0x71, 0xce, 0xbc, 0xe1, 0x7d, 0x30, 0x1f, 0xc8, 0x15, 0x03, 0x21,
    0x43, 0x61, 0x60, 0xbb, 0x07, 0x94, 0xee, 0x3e, 0x4d, 0x16, 0x06, 0xb4,
    0xd5, 0xc9, 0x6e, 0x99, 0xb7, 0xf8, 0x00, 0x67, 0x09, 0xdc, 0x3a, 0x92,
    0x80, 0xb2, 0xc6, 0x63, 0xae, 0xd4, 0xcf, 0x17, 0x23, 0x9a, 0xb5, 0x34,
    0x3f, 0x2e, 0x99, 0x12, 0x38, 0x63, 0x30, 0xef, 0x2c, 0xd4, 0x6f, 0x37,
    0x38, 0x4c, 0x3d, 0x24, 0xdf, 0xf5, 0x07, 0xfd, 0x85, 0xda, 0x7e, 0xb1,
    0x75, 0x25, 0xd4, 0x86, 0xbe, 0xf0, 0x8a, 0x35, 0xb4, 0xcf, 0xb2, 0xf5,
    0xd7, 0x13, 0xc1, 0x4a, 0x8e, 0x70, 0xa5, 0xe4, 0xa1, 0xb4, 0xf1, 0xa7,
    0x0d, 0x71, 0x68, 0x1c, 0xd1, 0x9c, 0xd1, 0x06, 0xd1, 0xbc, 0x30, 0x05,
    0x2c, 0xe3, 0x19, 0x7c, 0xa1, 0x85, 0x09, 0xae, 0xe6, 0x94, 0x71, 0x72,
    0xcd, 0xf8, 0xc6, 0x48, 0xaa, 0x1d, 0x17, 0xe3, 0xc3, 0x19, 0x3f, 0xd9,
    0xa7, 0xd4, 0xc0, 0x4f, 0xe9, 0xe1, 0x04, 0x69, 0x27, 0xc6, 0x1a, 0x1a,
    0x88, 0x07, 0x13, 0xc4, 0xca, 0x8c, 0x99, 0x4a, 0x76, 0xf2, 0x4e, 0x19,
    0x7e, 0xc0, 0xeb, 0x7d, 0x85, 0xca, 0xa0, 0xc2, 0x92, 0xf9, 0xfc, 0x62,
    0xe0, 0xb3, 0xf0, 0xf8, 0xd7, 0xd8, 0xf7, 0x12, 0x1d, 0x82, 0x2d, 0xd0,
    0xe7, 0x55, 0xca, 0xa0, 0x45, 0xd6, 0xbc, 0x7c, 0x29, 0x92, 0xbb, 0x24,
    0x71, 0x61, 0xf9, 0xa3, 0xf3, 0x5f, 0x9b, 0x97, 0x10, 0xd7, 0x30, 0x5f,
    0x1a, 0xc0, 0x4e, 0xec, 0xef, 0x1f, 0x03, 0x3b, 0x6f, 0x08, 0x42, 0xbf,
    0x81, 0x59, 0x44, 0xc6, 0xae, 0x97, 0xf3, 0x82, 0x08, 0x18, 0x3b, 0x06,
    0xaa, 0x44, 0x92, 0x1f, 0x43, 0xdd, 0xc7, 0x46, 0xce, 0xa6, 0xb3, 0x48,
    0x4e, 0x96, 0x14, 0xa7, 0x46, 0xce, 0xd5, 0x7f, 0x62, 0xdc, 0x40, 0x89,
    0x0c, 0xde, 0xe4, 0x33, 0xba, 0x1f, 0xe1, 0x39, 0xd1, 0x2d, 0xda, 0xac,
    0x99, 0x9b, 0xc5, 0x38, 0xda, 0x43, 0xf4, 0x77, 0xb8, 0xb4, 0x60, 0x0c,
    0xef, 0x01, 0x7b, 0x1f, 0x2e, 0xfa, 0x65, 0xe1, 0x7e, 0x19, 0x44, 0x64,
    0xdb, 0x5c, 0x69, 0x0b, 0xfb, 0x90, 0xc5, 0xee, 0xcf, 0x9f, 0x01, 0x47,
    0x8b, 0x06, 0x5c, 0xd7, 0xa6, 0x47, 0x28, 0xe0, 0x07, 0x5e, 0x84, 0x02,
    0xff, 0x61, 0x30, 0x87, 0x5b, 0x58, 0xd6, 0xff, 0xdf, 0x1c, 0xc0, 0xf4,
    0xb6, 0xc7, 0xc3, 0x9b, 0xb7, 0x67, 0x61, 0xf8, 0x94, 0xa6, 0x91, 0xf4,
    0x84, 0xd4, 0x5b, 0x63, 0x0e, 0xe5, 0x23, 0x8e, 0xad, 0xef, 0x55, 0xc2,
    0x6e, 0xe2, 0x14, 0xa6, 0x74, 0x05, 0xbb, 0x4e, 0xbb, 0xba, 0x85, 0x0c,
    0x4b, 0x69, 0xf2, 0xf2, 0x46, 0xb3, 0x4d, 0x69, 0x40, 0x8d, 0x60, 0xa0,
    0xfe, 0xee, 0x2a, 0xfa, 0xc3, 0x98, 0x62, 0x40, 0x27, 0x00, 0x3b, 0x4e,
    0xab, 0x11, 0x84, 0x20, 0x5e, 0x3b, 0x88, 0x85, 0x20, 0x89, 0xab, 0x12,
    0xc9, 0x29, 0xa2, 0x4b, 0xb9, 0xa1, 0xfc, 0xe9,
};

static const unsigned char TA_RSA_E0[] = {
    0x01, 0x00, 0x01,
};

static const br_x509_trust_anchor TAs[] = {
    {
        { (unsigned char *)TA_DN0, sizeof TA_DN0 },
        BR_X509_TA_CA,
        {
            BR_KEYTYPE_RSA,
            { .rsa = {
                (unsigned char *)TA_RSA_N0, sizeof TA_RSA_N0,
                (unsigned char *)TA_RSA_E0, sizeof TA_RSA_E0,
            } }
        }
    },
};

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ifndef _CERTIFICATES_H_ */
